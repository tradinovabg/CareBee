name: Deploy Vite to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json

      # Если package-lock повреждён/отсутствует, npm ci упадёт.
      # Делаем мягкий fallback на npm install.
      - name: Install deps
        run: |
          npm ci || npm install

      # Покажем содержимое public и наличие видео
      - name: List public before build
        run: |
          echo "=== PUBLIC ==="
          ls -lah public || true
          echo "=== find hero.mp4 ==="
          find public -name "hero.mp4" -print || true

      # Сам билд (без секретов, чтобы не блокировало)
      - name: Build with Vite
        env:
          # Включаем CI=false, чтобы предупреждения не роняли сборку в некоторых конфигурациях
          CI: false
        run: |
          echo "Vite build starting…"
          npm run build 2>&1 | tee build.log
          echo "=== LAST 200 LINES OF BUILD LOG ==="
          tail -n 200 build.log

      # Проверим, попало ли видео в dist
      - name: List dist after build
        run: |
          echo "=== DIST ==="
          ls -lah dist || true
          echo "=== find hero.mp4 in dist ==="
          find dist -name "hero.mp4" -print || true

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
